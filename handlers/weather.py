from datetime import datetime, timedelta
from typing import Optional

import httpx
from aiogram.types import Message
from httpx import AsyncClient
from secret_chat.config import OWM_API


icon_id = {
    200: 'üåß',
    201: 'üåß',
    202: 'üåß',
    210: 'üå©',
    211: 'üå©',
    212: 'üå©',
    221: 'üå©',
    230: '‚õà',
    231: '‚õà',
    232: '‚õà',
    300: 'üå¶',
    301: 'üå¶',
    302: 'üå¶',
    310: 'üå¶',
    311: 'üå¶',
    312: 'üå¶',
    313: 'üå¶',
    314: 'üå¶',
    321: 'üå¶',
    500: 'üåß',
    501: 'üåß',
    502: 'üåß',
    503: 'üåß',
    504: 'üåß',
    511: 'üåß',
    521: 'üåß',
    522: 'üåß',
    531: 'üåß',
    600: 'üå®',
    601: 'üå®',
    602: 'üå®',
    611: 'üå®',
    612: 'üå®',
    613: 'üå®',
    615: 'üå®',
    616: 'üå®',
    620: 'üå®',
    621: 'üå®',
    622: 'üå®',
    701: 'üå´',
    711: 'üå´',
    721: 'üå´',
    731: 'üå´',
    741: 'üå´',
    751: 'üå´',
    761: 'üå´',
    762: 'üå´',
    771: 'üå™',
    781: 'üå™',
    800: '‚òÄÔ∏è',
    801: 'üå§',
    802: '‚õÖÔ∏è',
    803: 'üå•',
    804: '‚òÅÔ∏è',
}


def weather_url_builder(weather_type: str) -> str:
    return f'https://api.openweathermap.org/data/2.5/{weather_type}'


def weather_url_builder_http(weather_type: str) -> str:
    return f'http://api.openweathermap.org/data/2.5/{weather_type}'


async def get_weather(session: AsyncClient, city: str, weather_type: str, cnt: Optional[int] = None) -> Optional[dict]:
    try:
        response = await session.get(
            timeout=1,
            url=weather_url_builder(weather_type),
            params={
                'lang': 'ru',
                'units': "metric",
                'appid': OWM_API,
                'q': city,
                'cnt': cnt
            }
        )
    except httpx.ConnectTimeout:
        try:
            response = await session.get(
                url=weather_url_builder_http(weather_type),
                params={
                    'lang': 'ru',
                    'units': "metric",
                    'appid': OWM_API,
                    'q': city,
                    'cnt': cnt
                }
            )
        except httpx.ConnectTimeout:
            return None
    data = response.json()
    return data


def calculate_time(time_range: int, api_response: Optional[dict]):
    time_zone = api_response['city']['timezone'] / 3600  # seconds to hours
    my_local_time_zone = 5  # datetime.now() uses Tyumen time cuz server is here
    time_diff = time_range * 3 + (time_zone - my_local_time_zone)
    time = datetime.now() + timedelta(hours=time_diff)
    return time.strftime("%H:%M")


async def weather(message: Message):
    city = message.get_args()
    if city == '':
        city = '–¢—é–º–µ–Ω—å'
    session = httpx.AsyncClient()
    cnt = 4
    api_response = await get_weather(session, city, 'forecast', cnt)
    if not api_response:
        await message.reply('–ö–æ–Ω–µ–∫—à–æ–Ω —Ç–∏–º–µ–∞—É—Ç')
        await session.aclose()
        return
    cod = int(api_response['cod'])
    if cod // 100 != 2:
        if cod == 404:
            await message.reply('–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
        else:
            await message.reply('–ü–æ—à–µ–ª –Ω–∞—Ö—É–π')
        await session.aclose()
        return

    text = f"–ü–æ–≥–æ–¥–∞ –¥–ª—è –≥–æ—Ä–æ–¥–∞ <b>{api_response['city']['name']}</b>\n\n"
    for time_range in range(api_response['cnt']):
        api_data = api_response['list'][time_range]
        api_weather = api_data['weather'][0]
        if time_range == 0:
            text += '<i><b>–°–µ–π—á–∞—Å</b></i>'
        else:
            text += f"<i><b>–í {calculate_time(time_range, api_response)}</b></i>"
        text += f"\nüå° <b>{round(api_data['main']['temp'])}¬∞</b>\n"\
                f"{icon_id[api_weather['id']]} {str(api_weather['description']).capitalize()}\n"\
                f"üí® <b>{round(api_data['wind']['speed'])} –º/—Å</b>\n\n"

    await message.reply(text)
    await session.aclose()


def register(dp):
    dp.register_message_handler(weather, commands=['w', 'weather'])
